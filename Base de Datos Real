{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMuXdBdWg4+z6nyYNOuJK7g",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/lauracguevaraa-tech/Base-de-Datos-/blob/main/Base%20de%20Datos%20Real\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gGDS9xYiSHJl",
        "outputId": "a8863d1a-7393-4fd1-ffbd-0e3e2d6d549d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Base de datos 'chocolates.db' creada con éxito ✅\n"
          ]
        }
      ],
      "source": [
        "import sqlite3\n",
        "\n",
        "# Crear conexión y cursor\n",
        "conn = sqlite3.connect(\"chocolates.db\")\n",
        "cursor = conn.cursor()\n",
        "\n",
        "# =========================\n",
        "# CREAR TABLAS\n",
        "# =========================\n",
        "cursor.execute(\"\"\"\n",
        "CREATE TABLE IF NOT EXISTS Lotes_Cacao (\n",
        "    ID_Lote TEXT PRIMARY KEY,\n",
        "    Origen TEXT,\n",
        "    Peso_kg REAL,\n",
        "    Humedad REAL,\n",
        "    Color_Corte TEXT,\n",
        "    Tamaño_Grano TEXT,\n",
        "    Fecha_Recepción TEXT,\n",
        "    Inspector TEXT,\n",
        "    Codigo_Trazabilidad TEXT\n",
        ")\n",
        "\"\"\")\n",
        "\n",
        "cursor.execute(\"\"\"\n",
        "CREATE TABLE IF NOT EXISTS Tostado (\n",
        "    ID_Tostado TEXT PRIMARY KEY,\n",
        "    ID_Lote TEXT,\n",
        "    Temp_C REAL,\n",
        "    Duracion_min INTEGER,\n",
        "    Peso_Tostado_kg REAL,\n",
        "    Fecha TEXT,\n",
        "    FOREIGN KEY (ID_Lote) REFERENCES Lotes_Cacao(ID_Lote)\n",
        ")\n",
        "\"\"\")\n",
        "\n",
        "cursor.execute(\"\"\"\n",
        "CREATE TABLE IF NOT EXISTS Descascarillado_Molienda (\n",
        "    ID_Molienda TEXT PRIMARY KEY,\n",
        "    ID_Tostado TEXT,\n",
        "    Rendimiento REAL,\n",
        "    Tamano_1ra_micras INTEGER,\n",
        "    Tamano_2da_micras INTEGER,\n",
        "    Temp_C REAL,\n",
        "    Fecha TEXT,\n",
        "    FOREIGN KEY (ID_Tostado) REFERENCES Tostado(ID_Tostado)\n",
        ")\n",
        "\"\"\")\n",
        "\n",
        "cursor.execute(\"\"\"\n",
        "CREATE TABLE IF NOT EXISTS Refinado_Conchado (\n",
        "    ID_Conchado TEXT PRIMARY KEY,\n",
        "    ID_Molienda TEXT,\n",
        "    Micras_Final INTEGER,\n",
        "    Conchado_Horas INTEGER,\n",
        "    Fase TEXT,\n",
        "    Temp_C REAL,\n",
        "    Fecha TEXT,\n",
        "    FOREIGN KEY (ID_Molienda) REFERENCES Descascarillado_Molienda(ID_Molienda)\n",
        ")\n",
        "\"\"\")\n",
        "\n",
        "cursor.execute(\"\"\"\n",
        "CREATE TABLE IF NOT EXISTS Control_Textura (\n",
        "    ID_Control TEXT PRIMARY KEY,\n",
        "    ID_Conchado TEXT,\n",
        "    Particulas_25um REAL,\n",
        "    Viscosidad_cP REAL,\n",
        "    Fundicion_seg INTEGER,\n",
        "    Sensorial TEXT,\n",
        "    Tecnico TEXT,\n",
        "    FOREIGN KEY (ID_Conchado) REFERENCES Refinado_Conchado(ID_Conchado)\n",
        ")\n",
        "\"\"\")\n",
        "\n",
        "cursor.execute(\"\"\"\n",
        "CREATE TABLE IF NOT EXISTS Temperado (\n",
        "    ID_Temperado TEXT PRIMARY KEY,\n",
        "    ID_Control TEXT,\n",
        "    Tipo TEXT,\n",
        "    T_Inicial REAL,\n",
        "    T_Enfriado REAL,\n",
        "    T_Final REAL,\n",
        "    Fecha TEXT,\n",
        "    FOREIGN KEY (ID_Control) REFERENCES Control_Textura(ID_Control)\n",
        ")\n",
        "\"\"\")\n",
        "\n",
        "cursor.execute(\"\"\"\n",
        "CREATE TABLE IF NOT EXISTS Moldeo (\n",
        "    ID_Moldeo TEXT PRIMARY KEY,\n",
        "    ID_Temperado TEXT,\n",
        "    Molde TEXT,\n",
        "    Ciclos_Vibracion INTEGER,\n",
        "    Estado TEXT,\n",
        "    Fecha TEXT,\n",
        "    FOREIGN KEY (ID_Temperado) REFERENCES Temperado(ID_Temperado)\n",
        ")\n",
        "\"\"\")\n",
        "\n",
        "cursor.execute(\"\"\"\n",
        "CREATE TABLE IF NOT EXISTS Enfriamiento (\n",
        "    ID_Enfriamiento TEXT PRIMARY KEY,\n",
        "    ID_Moldeo TEXT,\n",
        "    Temp_C REAL,\n",
        "    HR REAL,\n",
        "    Tiempo_min INTEGER,\n",
        "    Fecha TEXT,\n",
        "    FOREIGN KEY (ID_Moldeo) REFERENCES Moldeo(ID_Moldeo)\n",
        ")\n",
        "\"\"\")\n",
        "\n",
        "cursor.execute(\"\"\"\n",
        "CREATE TABLE IF NOT EXISTS Control_Acabado (\n",
        "    ID_Acabado TEXT PRIMARY KEY,\n",
        "    ID_Enfriamiento TEXT,\n",
        "    Brillo TEXT,\n",
        "    Defectos TEXT,\n",
        "    Clasificacion TEXT,\n",
        "    Inspector TEXT,\n",
        "    FOREIGN KEY (ID_Enfriamiento) REFERENCES Enfriamiento(ID_Enfriamiento)\n",
        ")\n",
        "\"\"\")\n",
        "\n",
        "cursor.execute(\"\"\"\n",
        "CREATE TABLE IF NOT EXISTS Desmoldado_Decoracion (\n",
        "    ID_Decoracion TEXT PRIMARY KEY,\n",
        "    ID_Acabado TEXT,\n",
        "    Metodo TEXT,\n",
        "    Decoracion TEXT,\n",
        "    Responsable TEXT,\n",
        "    FOREIGN KEY (ID_Acabado) REFERENCES Control_Acabado(ID_Acabado)\n",
        ")\n",
        "\"\"\")\n",
        "\n",
        "cursor.execute(\"\"\"\n",
        "CREATE TABLE IF NOT EXISTS Empaque (\n",
        "    ID_Empaque TEXT PRIMARY KEY,\n",
        "    ID_Decoracion TEXT,\n",
        "    Empaque TEXT,\n",
        "    Etiqueta TEXT,\n",
        "    Fecha TEXT,\n",
        "    Responsable TEXT,\n",
        "    FOREIGN KEY (ID_Decoracion) REFERENCES Desmoldado_Decoracion(ID_Decoracion)\n",
        ")\n",
        "\"\"\")\n",
        "\n",
        "# =========================\n",
        "# INSERTAR DATOS DE EJEMPLO\n",
        "# =========================\n",
        "cursor.executemany(\"\"\"\n",
        "INSERT INTO Lotes_Cacao VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n",
        "\"\"\", [\n",
        "    (\"L001\", \"Venezuela\", 65, 7.2, \"Púrpura\", \"Grande\", \"2025-09-20\", \"Juan R.\", \"VC-20250920-001\"),\n",
        "    (\"L002\", \"Ecuador\", 55, 6.5, \"Púrpura\", \"Mediano\", \"2025-09-21\", \"María P.\", \"EC-20250921-002\"),\n",
        "    (\"L003\", \"Madagascar\", 70, 7.8, \"Púrpura\", \"Pequeño\", \"2025-09-22\", \"Carlos S.\", \"MG-20250922-003\")\n",
        "])\n",
        "\n",
        "cursor.executemany(\"\"\"\n",
        "INSERT INTO Tostado VALUES (?, ?, ?, ?, ?, ?)\n",
        "\"\"\", [\n",
        "    (\"T001\", \"L001\", 142, 60, 25, \"2025-09-20\"),\n",
        "    (\"T002\", \"L002\", 145, 72, 23, \"2025-09-21\"),\n",
        "    (\"T003\", \"L003\", 140, 50, 24, \"2025-09-22\")\n",
        "])\n",
        "\n",
        "# Puedes seguir insertando datos de ejemplo para las demás tablas\n",
        "# =========================\n",
        "\n",
        "# Guardar cambios y cerrar conexión\n",
        "conn.commit()\n",
        "conn.close()\n",
        "\n",
        "print(\"Base de datos 'chocolates.db' creada con éxito ✅\")\n"
      ]
    }
  ]
}